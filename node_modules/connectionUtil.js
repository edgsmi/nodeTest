const jsonUtil = require('./jsonUtil');
const util2 = require('./util2');
const promise = require('promise');
const oracledb = require('oracledb');  
const fs = require('fs');




function getConnectionList() {
	var dirname = '.';
	var file = 'info_jdbc.json';
	var encoding = 'utf8';
	var data = jsonUtil.readJsonFileFromDir(dirname, file, encoding);
  return data;
}


function initConnectionOld(user, password, host, port, sid, request, callback) {
  if (request == undefined || request == null || request == "" ) {
    return;
  }

  var oracledb = require('oracledb');  
      
    oracledb.getConnection({  
         user: user,  
         password: password,  
         connectString: host + ":" + port + "/" + sid  
    }, function(err, connection) { queryOld(err, connection, request, callback); });  
}


function queryOld(err, connection, request, callback) {  
   if (err) {
        return util2.onError(err);
   }      
   //connection.execute( "SELECT department_id, department_name FROM departments WHERE department_id = 180",  
   //connection.execute( "select prop_key, value from GENERAL_PROPERTY_ATTRIBUTE where prop_key = 'mydecathlon.fo.enable'",
   //connection.execute( "select name, host from PLATFORM_CONNECTION where host = '" + host + "'",
   connection.execute( request,            
   [],  
   function(err, result) {  
        if (err) {  
             console.error(err.message);  
             doReleaseOld(connection);  
             return;  
        }  
        //console.log(result.metaData);  
        //console.log(result.rows);  
        doReleaseOld(connection);
        callback(result.rows);  
        //return result.rows;
   });  
}


function doReleaseOld(connection) {  
     connection.release(  
          function(err) {  
               if (err) {console.error(err.message);}  
          }  
     );  
}  


function initConnection(user, password, host, port, sid, request) {

  

    if (request == undefined || request == null || request == "" ) {
      return;
    }

    console.log("cool");

   var pGetConnection  = promise.denodeify(oracledb.getConnection);

    var p1 = pGetConnection({  
           user: user,  
           password: password,  
           connectString: host + ":" + port + "/" + sid  
      });
        
    var p2 = p1.then(function (data) {
       console.log("success1");
    }, function (err) {
      console.log(err);
       //reject("error " + err);
    });


    var pReadFile  = promise.denodeify(fs.readFile)
    var p3 = pReadFile("mon_fichier");
    var p4 = p3.then(function (data) {
       console.log("success2");
    }, function (err) {
      console.log(err);
       //reject("error " + err);
    });



}

function query(err, connection, request) {  
   if (err) {
        util2.onError(err);
        return;
   }      
   //connection.execute( "SELECT department_id, department_name FROM departments WHERE department_id = 180",  
   //connection.execute( "select prop_key, value from GENERAL_PROPERTY_ATTRIBUTE where prop_key = 'mydecathlon.fo.enable'",
   //connection.execute( "select name, host from PLATFORM_CONNECTION where host = '" + host + "'",
   connection.execute( request,            
   [],  
   function(err, result) {  
        if (err) {  
             console.error(err.message);  
             doReleaseOld(connection);  
             return;  
        }  
        doReleaseOld(connection);
        return result.rows;
   });  
}


exports.getConnectionList = getConnectionList;
exports.initConnection = initConnection;