const jsonUtil = require('./jsonUtil');
const util2 = require('./util2');
const promise = require('promise');


function getConnectionList() {
	var dirname = '.';
	var file = 'info_jdbc.json';
	var encoding = 'utf8';
	var data = jsonUtil.readJsonFileFromDir(dirname, file, encoding);
  return data;
}


function initConnectionOld(user, password, host, port, sid, request, callback) {
  if (request == undefined || request == null || request == "" ) {
    return;
  }

  var oracledb = require('oracledb');  
      
    oracledb.getConnection({  
         user: user,  
         password: password,  
         connectString: host + ":" + port + "/" + sid  
    }, function(err, connection) { queryOld(err, connection, request, callback); });  
}


function queryOld(err, connection, request, callback) {  
   if (err) {
        return util2.onError(err);
   }      
   //connection.execute( "SELECT department_id, department_name FROM departments WHERE department_id = 180",  
   //connection.execute( "select prop_key, value from GENERAL_PROPERTY_ATTRIBUTE where prop_key = 'mydecathlon.fo.enable'",
   //connection.execute( "select name, host from PLATFORM_CONNECTION where host = '" + host + "'",
   connection.execute( request,            
   [],  
   function(err, result) {  
        if (err) {  
             console.error(err.message);  
             doReleaseOld(connection);  
             return;  
        }  
        //console.log(result.metaData);  
        //console.log(result.rows);  
        doReleaseOld(connection);
        callback(result.rows);  
        //return result.rows;
   });  
}


function doReleaseOld(connection) {  
     connection.release(  
          function(err) {  
               if (err) {console.error(err.message);}  
          }  
     );  
}  


function initConnection(user, password, host, port, sid, request) {

  return new Promise(function(resolve, reject) {

  if (request == undefined || request == null || request == "" ) {
    reject("error");
  }

  resolve("success");

  var oracledb = require('oracledb');  
      
    oracledb.getConnection({  
         user: user,  
         password: password,  
         connectString: host + ":" + port + "/" + sid  
    }, function(err, connection) { queryOld(err, connection, request, callback); });  


  });

}

function query(err, connection, request) {  
   if (err) {
        util2.onError(err);
        return;
   }      
   //connection.execute( "SELECT department_id, department_name FROM departments WHERE department_id = 180",  
   //connection.execute( "select prop_key, value from GENERAL_PROPERTY_ATTRIBUTE where prop_key = 'mydecathlon.fo.enable'",
   //connection.execute( "select name, host from PLATFORM_CONNECTION where host = '" + host + "'",
   connection.execute( request,            
   [],  
   function(err, result) {  
        if (err) {  
             console.error(err.message);  
             doReleaseOld(connection);  
             return;  
        }  
        doReleaseOld(connection);
        return result.rows;
   });  
}


exports.getConnectionList = getConnectionList;
exports.initConnection = initConnection;